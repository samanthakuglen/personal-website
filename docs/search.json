{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "This website was created as part of the UC Santa Barbara Bren School course, ESM 244. ",
      "author": [],
      "contents": "\nHere’s some more information about me:\n In my most recent job I worked at Point Reyes National Seashore and Golden Gate National Recreation Area monitoring coho salmon and steelhead trout. In this photo, I am taking a sample for water quality measurements.\n In my free time, I enjoy scuba diving and have my PADI Advanced Open Water Certification.\n I enjoy spending time with my family, here’s us in Cagayan de Oro, Philippines.\n\n\n\n",
      "last_modified": "2022-03-14T17:38:02-07:00"
    },
    {
      "path": "blog.html",
      "title": "Blog",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-03-14T17:38:02-07:00"
    },
    {
      "path": "cv.html",
      "title": "CV",
      "author": [],
      "contents": "\nClick Here to view a PDF of my CV.\nEducation\nUniversity of California, Santa Barbara (UCSB) - Bren School of Environmental Science & Management\nMaster of Environmental Science Management with a Specialization in Conservation Planning and Coastal Marine Resources Management (4.00/4.00)\n\nUniversity of California, San Diego (UCSD)\nBachelor of Science in Marine Biology and Minor in Environmental Studies\n\nWork Experience\nGraduate Student Reader – UCSB Environmental Studies Department\nSanta Barbara, CA (01/22 – 03/22)\n\nWatershed Stewards Program (WSP) – Americorps, National Park Service\nGolden Gate National Recreation Area & Point Reyes National Seashore & (10/20–08/21)\n\nResearch Assistant – NOAA Southwest Fisheries Science Center\nLa Jolla, CA (11/18–07/19)\n\nMarine Biology & Ocean Operations (MBOO) Intern – City of San Diego\nSan Diego, CA (10/17–10/18)\n\nAwards\nBiological Sciences Undergraduate Excellence in Teaching Award 2018-2019\nOutreach and Involvement\nClinton Global Initiative University (CGI U) Conference 2018\nAlternative Breaks at UC San Diego\n\n\n\n",
      "last_modified": "2022-03-14T17:38:03-07:00"
    },
    {
      "path": "index.html",
      "title": "Sam Kuglen",
      "author": [],
      "contents": "\n\n          \n          \n          kuglen\n          \n          \n          Home\n          About\n          Blog\n          CV\n          \n          \n          Projects\n           \n          ▾\n          \n          \n          Project 1 - Model Selection\n          Project 2 - Parameter Estimation\n          Project 3 - Salmon Outreach Video\n          Project 4 - Mooring Outreach Video\n          Project 5 - Willamette Falls Analysis\n          Project 6 - Text Wrangling and Analysis\n          \n          \n          ☰\n          \n          \n      \n        \n          \n            \n          \n            Sam Kuglen\n          \n          \n            \n                \n                I am a current graduate student at the UC Santa Barbara Bren School, Master of Environmental Science & Management program. I am passionate about addressing how human pollutants and climate variability affect ocean ecosystems and fisheries management. I aspire to help agencies make informed decisions in coastal marine resource use and ecological management.\n                \n                \n                I am a current graduate student at the UC Santa Barbara Bren School, Master of Environmental Science & Management program. I am passionate about addressing how human pollutants and climate variability affect ocean ecosystems and fisheries management. I aspire to help agencies make informed decisions in coastal marine resource use and ecological management.\n                \n            \n          \n\n          \n            \n            \n              \n                  \n                    \n                      LinkedIn\n                    \n                  \n                \n                                \n                  \n                    \n                      Twitter\n                    \n                  \n                \n                                \n                  \n                    \n                      GitHub\n                    \n                  \n                \n                                \n                  \n                    \n                      Email\n                    \n                  \n                \n                              \n            \n\n            \n            \n              \n                                \n                  \n                    LinkedIn\n                  \n                \n                                \n                  \n                    Twitter\n                  \n                \n                                \n                  \n                    GitHub\n                  \n                \n                                \n                  \n                    Email\n                  \n                \n                              \n            \n            \n          \n        \n      \n    \n\n    \n    \n    ",
      "last_modified": "2022-03-14T17:38:03-07:00"
    },
    {
      "path": "project2.html",
      "title": "Project 2 -  Parameter Estimation - Lizards Length to Weight ",
      "description": "Here is a sample coding project and report from the Bren course ESM 244.\n",
      "author": [],
      "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\n#Attach packages\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\nlibrary(broom)\nlibrary(caret)\nlibrary(kableExtra)\nlibrary(modelr)\n\n\n\nA. Overview\nThe purpose of this code is to utilize non-linear least squares to estimate parameters of a length to weight model for lizard populations in New Mexico at the Jornada Basin LTER site.\nData Citation: Source: Lightfoot, D. and W.G. Whitford. 2020. Lizard pitfall trap data from 11 NPP study locations at the Jornada Basin LTER site, 1989-2006 ver 37. Environmental Data Initiative. https://doi.org/10.6073/pasta/4a6e258fb49c31e222ecbbcfd128967f\nB. Data and Analysis\nRead in the data and update sex in the table to be full name (i.e. Male and Female).\n\n\nlizards <- read_csv(here(\"data\", \"lizard.csv\")) %>% \n    mutate(sex = case_when(sex == 'F' ~ 'Female',\n                         sex == 'M' ~ 'Male')) %>% \n  clean_names()\n\n\n\nI. Snout Length to Weight Model\nA snout length to weight model of the following form is used for all lizards in the dataframe. The equation is:\n\\[ W = a(SVL)^b\\ \\]\nWhere weight is given by W, snout to vent length by SVL, and a and b are the parameters that need to be fitted. Since the model is exponential in nature, we will log transform the data. Then, use standard OLS regression on the log transformed data to get approximations of the parameters a and b from the regression coefficients.\n\n\n# model function\nweight_function <- function(a, sv_length, b) {\n  weight = a * (sv_length)^b\n  return(weight)\n}\n\n# log transform the data\nlizards_log <- lizards %>% \n  mutate(log_weight = log(weight)) %>% \n  mutate(log_length = log(sv_length))\n\n# standard OLS regression on log transformed data\nguess_model <- lm(log_weight ~ log_length, data = lizards_log)\ntidy_guess_model <- tidy(guess_model)\n\n# Using coefficients function, supply nls start list with regression coefficients\ncoef <- coefficients(guess_model)\n\n# Mathematically transform intercept coefficient to get guess for parameter a\nlizards_nls <- nls(weight ~ weight_function(a, sv_length, b),\n                  data = lizards,\n                  start = list(\n                    a = 2.718^(coef[1]/coef[2]),\n                    b = coef[2]),\n                    trace = TRUE)\n\n\n2.309002e+09 (3.87e+02): par = (0.0354286 2.537119)\n37258.06    (1.19e+00): par = (0.0003458809 2.536411)\n15903.54    (1.68e-01): par = (0.0003460121 2.464334)\n15467.24    (5.36e-03): par = (0.0003446172 2.451287)\n15466.81    (5.15e-04): par = (0.0003404191 2.45366)\n15466.80    (1.18e-04): par = (0.0003412931 2.453084)\n15466.80    (2.88e-05): par = (0.0003410855 2.453225)\n15466.80    (7.04e-06): par = (0.0003411367 2.453191)\n\n# Update p-values since they are very small to be < 0.001 \ntidy_nls_table <- tidy(lizards_nls) %>% \n  select(-statistic) %>% \n  mutate(p.value = ifelse(p.value < 0.001, \"< 0.001\"))\n\n# Table formatting\nkable(tidy_nls_table,\n      col = c(\"Parameter\", \"Estimate\", \"Std Error\", \"p-value\"), digits = 5,\n      caption = \"Table 1. Approximation of Parameters from Regression Coefficients\") %>% \n  kable_styling(bootstrap_options = \"striped\", \n                full_width = FALSE)\n\n\n\nTable 1: Table 1. Approximation of Parameters from Regression Coefficients\n\n\nParameter\n\n\nEstimate\n\n\nStd Error\n\n\np-value\n\n\na\n\n\n0.00034\n\n\n0.00004\n\n\n< 0.001\n\n\nb\n\n\n2.45319\n\n\n0.02698\n\n\n< 0.001\n\n\nmodel_fitted <- lizards_nls %>% \n  broom::augment(type.predict = \"response\")\n\n\n\nRegression coefficients: Intercept of the initial guess model is -8.48. The log length is 2.54.\nII. Fitted Model Plot of Female and Male Lizards\n\n\nggplot(lizards, aes(x = sv_length, y = weight, color = sex)) + \n  geom_point(aes(x = sv_length, y = weight, color = sex)) +\n  geom_line(data = model_fitted, aes(x = sv_length, y = .fitted, color = \"General Model Prediction\")) +\n  theme_linedraw() +\n  labs(x = \"Snout to Vent Length SVL (mm)\", \n       y = \"Weight (g)\", \n       title = \"Lizard Snout to Vent Length SVL (mm) vs Weight (g) by Sex\", \n       subtitle = \"Jornada Basin LTER (1989-2006)\",\n       color = \"Species and Model\") + \n  scale_color_manual(values = c( \"orange\", \"#0339fc\", \"#50C878\")) +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), # center title/subtitle\n        plot.subtitle = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#f5ebeb\"), # change background color\n        legend.background = element_blank(),\n        legend.box.background = element_rect(colour = \"black\")) # frame around legend\n\n\n\n\nFigure 1. Fitted non-linear regression model prediction plotted over data points of snout to vent length (mm) vs weight (g) for all lizards in the dataset, with female and male lizards separated by color. Data: Lightfoot, D. and W.G. Whitford. 2020.\nIII. Data Visualization of NLS Model for Subset of Male Western Whiptail lizard (Cnemidophorus tigrisatus)\nWe will create a species-specific subset model for male western whiptails only.\n\n\nwhiptail <- lizards %>% \n  filter(spp == \"CNTI\" & sex == \"Male\")\n\n# log transform the data again\nwhip_log <- whiptail %>% \n  mutate(log_weight = log(weight)) %>% \n  mutate(log_length = log(sv_length))\n\n# standard OLS regression on log transformed data\nwhip_model <- lm(log_weight ~ log_length, data = whip_log)\ntidy_whip_model <- tidy(whip_model)\n\n# Using coefficients function, supply nls start list with regression coefficients\nwhip_coef <- coefficients(whip_model)\n\n# Mathematically transform intercept coefficient to get guess for parameter a\n\nwhip_nls <- nls(weight ~ weight_function(a, sv_length, b),\n                  data = whiptail,\n                  start = list(\n                    a = 2.718^(coef[1]/coef[2]),\n                    b = whip_coef[2]),\n                    trace = TRUE)\n\n\n2.337431e+09 (1.71e+03): par = (0.0354286 2.698108)\n74451.02    (9.57e+00): par = (0.0003210173 2.696851)\n5602.768    (2.44e+00): par = (0.0003220544 2.557812)\n808.3604    (3.04e-02): par = (0.0004410967 2.409761)\n808.1249    (2.44e-02): par = (0.0004636693 2.398385)\n808.1066    (2.33e-02): par = (0.0004984119 2.38187)\n807.8293    (1.38e-02): par = (0.0005335038 2.366962)\n807.6756    (9.96e-05): par = (0.0005312628 2.368427)\n807.6756    (8.80e-06): par = (0.0005315999 2.368287)\n\nwhip_model_fitted <- whip_nls %>% \n  broom::augment(type.predict = \"response\")\n\n\n\nComparison of the output from the species-specific nls model to the general nls model for all species by graphing the model fits on the Western Whiptail male data.\n\n\n# Calculate RMSE values\n\n# Model fits on Western Whiptail male points\nggplot(whiptail, aes(x = sv_length, y = weight, color = sex)) + \n  geom_point(aes(x = sv_length, y = weight, color = sex)) +\n  geom_line(data = model_fitted, aes(x = sv_length, \n                                     y = .fitted, \n                                     color = \"General Model Prediction\")) + # general nls\n  geom_line(data = whip_model_fitted, aes(x = sv_length, \n                                          y = .fitted, \n                                          color = \"Whiptail Model Prediction\")) + # whip nls \n  theme_linedraw() +\n  labs(x = \"Snout to Vent Length SVL (mm)\", \n       y = \"Weight (g)\", \n       title = \"Whiptail Male Snout to Vent Length (mm) vs Weight (g)\", \n       subtitle = \"Jornada Basin LTER (1989-2006)\",\n       color = \"Specices and Models\") + \n  scale_color_manual(values = c(\"#0339fc\", \"#50C878\", \"red\")) +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), # center title/subtitle\n        plot.subtitle = element_text(hjust = 0.5),\n        plot.background = element_rect(fill = \"#f5ebeb\"), # change background color\n        legend.background = element_blank(),\n        legend.box.background = element_rect(colour = \"black\")) # frame around legend\n\n\n\nlizards_rmse <- rmse(lizards_nls, data = whip_log)\nwhip_rmse <- rmse(whip_nls, data = whip_log)\n\n\n\nFigure 2. Fitted non-linear regression model prediction for the entire dataset compared with the non-linear regression model for only Western Whiptail male (Cnemidophorus tigrisatus). The model predictions are plotted over data points of snout to vent length (mm) vs weight (g) for all lizards in the dataset, with female and male lizards separated by color. The RMSE value for the general model is 3.56 while for the Whiptail male model it is 3.35. The lower RMSE value for the Whiptail male model demonstrates that the species-specific model should be used for this subset. Data: Lightfoot, D. and W.G. Whitford. 2020.\n\n\n\n",
      "last_modified": "2022-03-14T17:38:10-07:00"
    },
    {
      "path": "project3.html",
      "title": "Project 3 - Outreach Video",
      "description": "National Park Service Video about Coho Salmon and Steelhead Trout in the California Bay Area\n",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\nHere is an outreach video I produced and narrated for the National Park Service at Point Reyes National Seashore and Golden Gate National Recreation Area. It highlights the salmonid smolt trapping program in the California Bay Area as part of the San Francisco Bay Area Inventory & Monitoring Network!\n\n\n\n",
      "last_modified": "2022-03-14T17:38:11-07:00"
    },
    {
      "path": "project4.html",
      "title": "Project 4",
      "description": "Project 4 - Mooring Recovery and Repair Video at the City of San Diego\n",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\nHere is a video I create to document a mooring recovery and repair by the City of San Diego Marine Biology and Ocean Operations in conjunction with Scripps Institution of Oceanography. There’s some background ship noises… but volume is not necessary.\n\n\n\n",
      "last_modified": "2022-03-14T17:38:11-07:00"
    },
    {
      "path": "project5.html",
      "title": "Project 5 - Willamette Falls Fish Passage ",
      "description": "Here is a sample coding project and report from the Bren course ESM 244.\n",
      "author": [],
      "contents": "\nA. Overview\n\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(lubridate)\nlibrary(tsibble)\nlibrary(patchwork)\nlibrary(janitor)\nlibrary(feasts)\nlibrary(slider)\n\n\n\nThis code analyzes data from the Willamette Falls fish ladder on the historic Willamette Falls Locks, located on the west bank of the Willamette River in West Linn, Oregon. Here, we focus on salmonids and their adult fish passage. 3 tabs are used to visually explore the data with through a time series, seasonplots, and annual counts by species, respectively. This data is important because can help inform regulations for the State of Oregon policy to “provide for the upstream and downstream passage for native migratory fish.”\n\nMap Source: U.S. Army Corps of Engineers: “Draft Willamette Falls Locks Integrated Disposition Study and Environmental Assessment”\nB. Data and Analysis\nData Citation: Data were shared by and accessed from Columbia River DART (Data Access in Real Time), with contributors of of U.S. Army Corps of Engineers, NWD and Chelan, Douglas, and Grant County PUDs, Yakima Klickitat Fisheries Project, Colville Tribes Fish & Wildlife (OBMEP), Oregon Department of Fish & Wildlife, Washington Department of Fish & Wildlife\n\n\n# Read in the data \nsalmon_data <- read_csv(here(\"data\", \"willamette_fish_passage.csv\")) %>%\n  clean_names() %>% \n  select(\"date\", \"coho\", \"jack_coho\", \"steelhead\") %>% \n  mutate(date = lubridate::mdy(date)) %>% \n  group_by(date, coho, jack_coho, steelhead) %>% \n  replace(is.na(.), 0) \n  \nsalmon_ts_long <- salmon_data %>% \n  as_tsibble(key = NULL, index = date) %>% \n  pivot_longer(cols = \"coho\":\"steelhead\",\n               names_to = \"species\",\n               values_to = \"count\") \n\n\n\nTab 1: Original Time Series\n\n\n# Filter for each species (Coho, Jack Coho, Steelhead) to be on separate panels \ncoho_panel <- salmon_ts_long %>% \n  filter(species == \"coho\")\n\njack_coho_panel <- salmon_ts_long %>% \n  filter(species == \"jack_coho\")\n\nsteelhead_panel <- salmon_ts_long %>% \n  filter(species == \"steelhead\")\n\n# Create plots for each\ncoho_plot <- ggplot(coho_panel, aes(x = date, y = count))+\n  geom_line(aes(color =  \"#1aa5b8\")) +\n  theme_linedraw()+\n  labs(x = \"Date\",\n       y = \"Count\",\n       title = \"Coho\") +\n  theme(legend.position = \"none\")\n  \njack_plot <- ggplot(jack_coho_panel, aes(x = date, y = count))+\n  geom_line(aes(color =  \"#1aa5b8\")) +\n  theme_linedraw()+\n  labs(x = \"Date\",\n       y = \"Count\",\n       title = \"Jack Coho\") +\n  theme(legend.position = \"none\")\n\nsteelhead_plot <- ggplot(steelhead_panel, aes(x = date, y = count))+\n  geom_line(aes(color =  \"#1aa5b8\")) +\n  theme_linedraw()+\n  labs(x = \"Date\",\n       y = \"Count\",\n       title = \"Steelhead\") +\n  theme(legend.position = \"none\")\n  \n# Combine plots using `patchwork` package\ntab_1_plots <- coho_plot / jack_plot / steelhead_plot\n\ntab_1_plots + \n  plot_annotation(title = \"Time Series of Adult Fish Passage at Willamette Fish Ladder\") \n\n\n\n\nFigure 1. Time series of counts by species of coho, jack coho, and steelhead salmonids on the Willamette fish ladder from 2001 to 2010. Note: different y-axis scales between species. Data: Columbia River DART.\nTab 2: Seasonplots\n\n\n# Create season plot \nsalmon_ts_long %>% \n  mutate(species = case_when(\n    species == \"coho\" ~ \"Coho\",\n    species == \"jack_coho\" ~ \"Jack Coho\", \n    species == \"steelhead\" ~ \"Steelhead\")) %>% \n  gg_season(y = count, year.labels = TRUE, continuous = TRUE) +\n  theme_linedraw() +\n  labs(x = \"Month\", y = \"Fish Count\") +\n  labs(title = \"Seasonplots of Adult Fish Passage Counts by Species\", \n       subtitle = \"(2001 - 2010)\") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\nFigure 2. Seasonplots of adult fish passage counts by species of coho, jack coho, and steelhead salmonids on the Willamette fish ladder from 2001 and 2010. Data: Columbia River DART.\nTab 3: Annual counts by species\n\n\nsalmon_annual <- salmon_ts_long %>% \n  index_by(year = ~year(.)) %>%\n  group_by(species) %>% \n  summarize(salmon_annual_count = sum(count)) %>% \n  mutate(species = case_when( # update for axis labels\n    species == \"coho\" ~ \"Coho\",\n    species == \"jack_coho\" ~ \"Jack Coho\", \n    species == \"steelhead\" ~ \"Steelhead\")) \n\n# Create annual count plot\nggplot(salmon_annual, aes(x = year, y = salmon_annual_count)) +\n  theme_linedraw() +\n  geom_line(aes(color=species)) +\n  scale_x_continuous(n.breaks = 10) +\n  labs(title = \"Annual Total Counts of Adult Fish Passage by Species\",\n       subtitle = \"(2000 - 2010)\",\n       x = \"Year\",\n       y = \"Count of adult fish passage\",\n       color = \"Species\") +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\nFigure 3. Annual counts by species of adult fish passage of coho, jack coho, and steelhead salmonids on the Willamette fish ladder from 2001 and 2010. Data: Columbia River DART.\n\n\n\n",
      "last_modified": "2022-03-14T17:38:16-07:00"
    },
    {
      "path": "project6.html",
      "title": "Project 6 -  Text Wrangling and Analysis ",
      "description": "Here is a sample coding project and report from the Bren course ESM 244.\n",
      "author": [],
      "contents": "\nA. Overview\nThis code analyzes text from the book Anna Karenina, a novel by Leo Tolstoy, first published in 1878. The data is wrangled to get tokens into tidy format and stop words are removed. Then, a word cloud is used for a visualization of counts for the most frequently used words in the text. Finally, a sentiment analysis is performed for types of words used throughout the book.\nB. Data and Analysis\nText Data Citation: Anna Karenina by Leo Tolstoy data acquired through Project Gutenberg Citation for NRC lexicon: Crowdsourcing a Word-Emotion Association Lexicon, Saif Mohammad and Peter Turney, Computational Intelligence, 29 (3), 436-465, 2013. Citation for Sentiments lexicon: Julia Silge and David Robinson (https://www.tidytextmining.com/sentiment.html)\n\n\n# Read in the data\nanna <- pdf_text(here(\"data\", 'anna.pdf'))\n\n\n\n\n\n# Get lines text\nanna_lines <- data.frame(anna) %>% \n  mutate(page = 1:n()) %>%\n  mutate(text_full = str_split(anna, pattern = '\\\\n')) %>% \n  unnest(text_full) %>% \n  mutate(text_full = str_trim(text_full)) \n\n\n\n\n\n# Format by chapters, remove intro text\nanna_chapts <- anna_lines %>% \n  slice(-(1:33)) %>% \n  mutate(chapter = ifelse(str_detect(text_full, \"Chapter\"), text_full, NA)) %>% \n  fill(chapter, .direction = 'down') %>% \n  separate(col = chapter, into = c(\"ch\", \"no\"), sep = \" \") %>% \n  mutate(chapter = as.numeric(as.roman(no)))\n\n\n\n\n\n# Get words from each chapter\nanna_words <- anna_chapts %>% \n  unnest_tokens(word, text_full) %>% \n  select(-anna)\n\nanna_wordcount <- anna_words %>% \n  count(chapter, word)\n\n# Remove stop words and \"page\" which shows up on every page\nanna_words_clean <- anna_words %>% \n  anti_join(stop_words, by = 'word') %>% \n  filter(!str_detect(word, \"page\"), !str_detect(word, \"1.672\"))\n\nnonstop_counts <- anna_words_clean %>% \n  count(chapter, word)\n\n\n\nI. Top 5 Words of Each Chapter in the First and Last 10 Chapters\n\n\n# Top 5 words in the first 10 chapters \ntop_5_words_first_10 <- nonstop_counts %>% \n  filter(chapter %in% c(1:10)) %>% \n  group_by(chapter) %>% \n  arrange(-n) %>% \n  slice(1:5) %>%\n  ungroup()\n\n# Top 5 words in the last 10 chapters\ntop_5_words_last_10 <- nonstop_counts %>% \n  filter(chapter %in% c(26:35)) %>% \n  group_by(chapter) %>% \n  arrange(-n) %>% \n  slice(1:5) %>%\n  ungroup()\n\n# Plot top 10 and last 10 chapters  \nggplot(data = top_5_words_first_10, aes(x = n, y = word)) +\n  theme_linedraw() +\n  geom_col(fill = \"#43a6f7\") +\n  facet_wrap(~chapter, scales = \"free\") + \n  labs(x = \"Word Count\",\n       y = \"Word\",\n       title = \"Top 5 Words in the First 10 Chapters of Anna Karenina\") +\n   theme(plot.title = element_text(hjust = 0.5, face = \"bold\"),\n         plot.subtitle = element_text(hjust = 0.5))\n\n\n\nggplot(data = top_5_words_last_10, aes(x = n, y = word)) +\n  theme_linedraw() +\n  geom_col(fill = \"#43a6f7\") +\n  facet_wrap(~chapter, scales = \"free\") +\n  labs(x = \"Word Count\",\n       y = \"Word\",\n       title = \"Top 5 Words in the Last 10 Chapters of Anna Karenina\") +\n  theme(plot.title = element_text(hjust = 0.5),\n         plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n",
      "last_modified": "2022-03-14T17:38:23-07:00"
    },
    {
      "path": "projects.html",
      "title": "Project 1 - Model Selection of CalCOFI Data",
      "description": "Here is a sample coding project and report from the Bren course ESM 244.\n",
      "author": [],
      "contents": "\nA. Overview\nThis report provides an exploratory review on the relationship between O2 saturation of seawater off California’s coast and several physical and chemical variables. Specifically, we examine and compare model selection for (1) Oxygen saturation as a function of water temperature, salinity, and phosphate concentration and (2) Oxygen saturation as a function of water temp, salinity, phosphate concentration, and depth.The purpose of this analysis is to determine which of the two models is more parsimonious, or in other words, provides predictive performance with simplicity and accuracy. This data is important because it provides important information about seawater in the California Current System that may influence or affect ecosystem processes.\nB. Data and Analysis\nThe data contain observations from CalCOFI seawater sample data. A 70+ year hydrographic time-series includes temperature, salinity, oxygen and phosphate observations, along with nutrient analysis of silicate, nitrate and nitrite. An AIC corrected (AICc) comparison between the two models is used to inform which model is a better fit, with preference for the model with lower AICc. Following AICc comparison of two linear regression models, a ten-fold cross validation is performed. The cross validation reserves a subset of data (test data) and trains our model using the rest (training data) to estimate the model parameters. All analyses are in R version 4.0.2 using RStudio version 1.3.1056.\n\n\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\n\n# Attach packages\nlibrary(tidyverse)\nlibrary(here)\nlibrary(AICcmodavg)\nlibrary(kableExtra)\nlibrary(equatiomatic)\n\n\n\n\n\n# Read in the data\ncalcofi_data <- read_csv(here(\"data\", \"calcofi_seawater_samples.csv\"))\n\n\n\nI. AIC Comparison of Two Linear Regression Models\nModel 1: Oxygen saturation as a function of water temperature, salinity, and phosphate concentration. Model 2: Oxygen saturation as a function of water temp, salinity, phosphate concentration, and depth.\n\n\n# Model 1 linear model with defined parameters\nf1 <- o2sat ~ t_deg_c + salinity + po4u_m\nmdl1 <- lm(f1, data = calcofi_data)\n\n# Model 2 linear model with defined parameters\nf2 <- o2sat ~ t_deg_c + salinity + po4u_m + depth_m\nmdl2 <- lm(f2, data = calcofi_data)\n\n\n\nAICc is used to select the better model, with a consideration the difference of AICc between the two models.\n\n\n# Use `aictab` to compare the models \naic_table <- AICcmodavg::aictab(list(mdl1, mdl2)) %>% \n  rename(\"Model\" = \"Modnames\")\n\nkable(aic_table,\n      caption = \"Table 1: Models 1 and 2 AIC corrected (AICc) Values\") %>% \n  kable_styling(bootstrap_options = \"striped\", \n                full_width = FALSE) \n\n\n\nTable 1: Table 1: Models 1 and 2 AIC corrected (AICc) Values\n\n\n\n\nModel\n\n\nK\n\n\nAICc\n\n\nDelta_AICc\n\n\nModelLik\n\n\nAICcWt\n\n\nLL\n\n\nCum.Wt\n\n\n2\n\n\nMod2\n\n\n6\n\n\n616.6048\n\n\n0.000000\n\n\n1.0000000\n\n\n0.7703216\n\n\n-301.8508\n\n\n0.7703216\n\n\n1\n\n\nMod1\n\n\n5\n\n\n619.0251\n\n\n2.420256\n\n\n0.2981592\n\n\n0.2296784\n\n\n-304.1934\n\n\n1.0000000\n\n\nModel 2’s AICc is 616.605 while Model 1’s AICc 619.025, with a difference in AIC’s of 2.42. Model 2’s AICc is lower than model 1 and means that it is the preferred model and a better fit, based on AICc.\nII. Ten-fold Cross Validation of the Two Models\nTen-fold cross validation is used with root-mean-square error (RMSE) as the scoring method and the final model is trained on the full dataset.\n\n\n# Assign number of folds and create a folds vector\nfolds <- 10\nfold_vec <- rep(1:folds, length.out = nrow(calcofi_data))\n\n# Starting number to generate sequence of random numbers\nset.seed(50)\n\nseawater_fold <- calcofi_data %>% \n  mutate(group = sample(fold_vec, size = n(), replace = FALSE))\n\n# First fold\ntest_df <- seawater_fold %>% \n  filter(group == 1) \ntrain_df <- seawater_fold %>% \n  filter(group != 1)\n\n\n\nRMSE goes in reverse order of these operations - find error (predicted actual), square it, find the average, then take the square root.\n\n\n# Calculate the RMSE value\ncalc_rmse <- function(x, y) {\n  rmse_result <- (x - y)^2 %>%  mean() %>%  sqrt()\n  return(rmse_result)\n}\n\n\n\nThe training dataset is used to create two linear regression models, based on the formulas above.\n\n\n# Training dataset is based on fold 1\ntraining_mdl1 <- lm(f1, data = train_df)\ntraining_mdl2 <- lm(f2, data = train_df)\n\n\n\nThe trained models are then used to predict on test data.\n\n\npredict_test <- test_df %>% \n  mutate(model1 = predict(training_mdl1, test_df),\n         model2 = predict(training_mdl2, test_df))\n\n# Calculate RMSE values\nrmse_predict_test <- predict_test %>% \n  summarize(rmse_mdl1 = round(calc_rmse(model1, o2sat), digits = 3),\n            rmse_mdl2 = round(calc_rmse(model2, o2sat), digits = 3)) \n\nkable(rmse_predict_test,\n      col = c(\"RMSE Model 1\",\n              \"RMSE Model 2\"),\n      caption = \"Table 2: Test Data RMSE Values for Models 1 and 2\") %>% \n  kable_styling(bootstrap_options = \"striped\", \n                full_width = FALSE)\n\n\n\nTable 2: Table 2: Test Data RMSE Values for Models 1 and 2\n\n\nRMSE Model 1\n\n\nRMSE Model 2\n\n\n5.895\n\n\n5.501\n\n\nComparison of RMSE values for Models 1 and 2 using the test dataframe with fold 1. RMSE for model 2 is lower, so it is preferred.\nCalculation over all folds and taking the average of RMSE values.\n\n\nrmse_df <- data.frame()\n\n# Iterate over all 10 folds to get RMSE values and store in a dataframe\nfor(i in 1:folds) {\n  kfold_test_df <- seawater_fold %>% \n    filter(group == i)\n  kfold_train_df <- seawater_fold %>% \n    filter(group != i)\n  \n  kfold_mdl1 <- lm(f1, data = kfold_train_df)\n  kfold_mdl2 <- lm(f2, data = kfold_train_df)\n  \n  kfold_pred_df <- kfold_test_df %>% \n    mutate(mdl1 = predict(kfold_mdl1, kfold_test_df),\n           mdl2 = predict(kfold_mdl2, .))\n  \n  kfold_rmse <- kfold_pred_df %>% \n    summarize(rmse_mdl1 = calc_rmse(mdl1, o2sat),\n              rmse_mdl2 = calc_rmse(mdl2, o2sat))\n  \n  rmse_df <- bind_rows(rmse_df, kfold_rmse)\n}\n\n# Use the dataframe from above to calculate the mean RMSE values for each model\nrmse_table <- rmse_df %>% \n  summarize(mean_rmse_mdl1 = mean(rmse_mdl1),\n            mean_rmse_mdl2 = mean(rmse_mdl2)) \n\nkable(rmse_table,\n      col = c(\"Mean RMSE Model 1\",\n                      \"Mean RMSE Model 2\"),\n      caption = \"Table 3: Average RMSE values for each model over all folds\") %>% \n  kable_styling(bootstrap_options = \"striped\", \n                full_width = FALSE)\n\n\n\nTable 3: Table 3: Average RMSE values for each model over all folds\n\n\nMean RMSE Model 1\n\n\nMean RMSE Model 2\n\n\n4.826589\n\n\n4.709636\n\n\nWe find that Model 2 has a lower average RMSE than Model 1, at values of 4.71 and 4.827, respectively. The 10 cross validation informs us that Model 2 has the best fit and predicts the observed values for oxygen saturation o2sat with the most accuracy.\nOnce we have chosen the model via cross validation (Model 2), we train our final model on our entire dataset.\n\n\nfinal_mdl <- lm(f2, data = calcofi_data)\n\n\n\nOur final parameterized model: \\[\n\\begin{aligned}\n\\operatorname{o2sat} &= \\alpha + \\beta_{1}(\\operatorname{t\\_deg\\_c}) + \\beta_{2}(\\operatorname{salinity}) + \\beta_{3}(\\operatorname{po4u\\_m})\\ + \\\\\n&\\quad \\beta_{4}(\\operatorname{depth\\_m}) + \\epsilon\n\\end{aligned}\n\\]\nOur final parameterized model with coefficients: \\[\n\\begin{aligned}\n\\operatorname{\\widehat{o2sat}} &= 144.07 - 0.75(\\operatorname{t\\_deg\\_c}) - 0.44(\\operatorname{salinity}) - 37.71(\\operatorname{po4u\\_m})\\ - \\\\\n&\\quad 0.03(\\operatorname{depth\\_m})\n\\end{aligned}\n\\]\nSummary\nData analysis reveals the following findings:\nModel 2’s AICc is lower than Model 1 and means that it is the preferred model and a better fit, based on AICc.\nModel 2 has a lower average RMSE than Model 1. The 10-fold cross validation informs us that Model 2 has the best fit and predicts the observed values for oxygen saturation o2sat with the most accuracy.\nModel 2: Oxygen saturation as a function of water temp, salinity, phosphate concentration, and depth is overall the most accurate model to inform our final parameterized model.\nData Citation\nCalCOFI data are available for use without restriction. Data downloaded from https://calcofi.org/ccdata.html. Accessed 1/10/2022.\n\n\n\n",
      "last_modified": "2022-03-14T17:38:26-07:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
